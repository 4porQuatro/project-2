<?php

namespace Packages\Store\app\Models;

use App\Interfaces\ModelSettignable;
use App\Interfaces\Pathable;
use App\Models\Category;
use App\Models\ExternalReference;
use App\Models\Layout;
use App\Models\Section;
use App\Models\Sectionable;
use App\Models\Seo;
use App\Models\Setting;
use App\Models\User;
use Astrotomic\Translatable\Translatable;
use Illuminate\Support\Facades\Cache;
use Illuminate\Support\Str;
use Packages\Store\app\Classes\Repositories\ProductRepository;
use Packages\Store\app\Interfaces\Buyable;
use Packages\Store\database\factories\CartFactory;
use Packages\Store\database\factories\ProductFactory;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Spatie\EloquentSortable\Sortable;
use Spatie\EloquentSortable\SortableTrait;

class Cart extends Model
{
    use HasFactory;

    protected $fillable = [
        'data', 'session_id', 'type'
    ];

    protected $appends = ['share_link'];


    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function($cart) {
            $cart->uuid = (string) Str::uuid();
        });
    }


    protected static function newFactory()
    {
        return CartFactory::new();
    }

    public function setDataAttribute($value)
    {
        $this->attributes['data'] = !empty($value) ? json_encode($value) : json_encode([]);
    }

    public function getDataAttribute($value)
    {
        return json_decode($value, true) ?? [];
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function items()
    {
        return Product::whereIn('id', $this->data);
    }

    public function shareLink()
    {
        return route('store.cart.share', ['uuid'=> $this->uuid]);
    }

    public function getShareLinkAttribute()
    {
        return $this->shareLink();
    }
}
