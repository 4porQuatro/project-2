<?php


namespace Packages\Reserved\tests\Feature;


use App\Models\User;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Support\Facades\Hash;
use Packages\Reserved\App\Constants\FormTypes;
use Packages\Reserved\App\Models\ReservedArea;
use Tests\TestCase;

class ResetPasswordEmailTest extends TestCase {
    use DatabaseMigrations;
    public $reserved;
    public $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->reserved = ReservedArea::factory()->create(['prefix'=>'prefix_test']);
        $this->user = User::factory()->create(['name'=>'Mister fill good','reserved_area_id'=>$this->reserved->id, 'email'=>'reco@reco.pt']);
        $this->user->password = Hash::make('filipe');
        $this->user->save();
    }

    /** @test */
    public function a_user_without_a_account_cant_recover_a_passord()
    {
        $end_point = $this->reserved->endPointForms()[FormTypes::RECOVER_PASSWORD_EMAIL];

        $this->assertTrue(true);

    }

    private function generateRequiredFields(\Illuminate\Database\Eloquent\Model $form)
    {
        foreach ($this->reserved->formRequiredFields()[FormTypes::RECOVER_PASSWORD_EMAIL] as $inputs)
        {
            $data = ['name' => $inputs['name'],'label'=>$inputs['label'], 'type' => $inputs['type'], 'rules' => $inputs['rules'], 'editable' => $inputs['editable']];
            $form->fields()->create($data);
        }

        return $inputs;
    }


}
