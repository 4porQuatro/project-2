<?php


namespace Packages\Reserved\tests\Feature;


use App\Models\User;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Hash;
use Tests\TestCase;

class CustomerDocumentsDownloadTest extends TestCase {

    use DatabaseMigrations;
    public $user;

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $file = UploadedFile::fake()->create('file_name');
        $file_path = $file->store('doc', 'form_uploads');
        $user_profile_data = [
            'document'=>$file_path
        ];

        $this->user = User::factory()->create(['profile_data'=>json_encode($user_profile_data)]);
    }

    /** @test */
    public function a_user_can_see_their_upload_files_on_profile_data()
    {
        $this->actingAs($this->user);

        $response = $this->get(
            route('customers.data.download', ['customer'=>$this->user->id, 'identifier'=>'document'])
        );
        $response->assertDownload();
    }

    /** @test */
    public function a_user_cant_see_other_users_upload_files_on_profile_data()
    {
        $this->actingAs($this->user);

        $file = UploadedFile::fake()->create('another_file_name');
        $file_path = $file->store('doc', 'form_uploads');
        $user_profile_data = [
            'document'=>$file_path
        ];

        $another_user = User::factory()->create(['profile_data'=>json_encode($user_profile_data)]);

        $response = $this->get(
            route('customers.data.download', ['customer'=>$another_user->id, 'identifier'=>'document'])
        );

        $response->assertStatus(403);
    }
}
