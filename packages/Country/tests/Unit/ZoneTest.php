<?php

namespace Packages\Country\tests\Unit;

use Illuminate\Foundation\Testing\DatabaseMigrations;
use Packages\Country\App\Models\Country;
use Packages\Country\App\Models\Zone;
use Tests\TestCase;

class ZoneTest extends TestCase {

    use DatabaseMigrations;




    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /** @test */
    public function has_a_name()
    {
        $zone = Zone::factory()->create();
        $this->assertArrayHasKey('name', $zone->toArray());
    }

    /** @test */
    public function has_active_status()
    {
        $zone = Zone::factory()->create();
        $this->assertArrayHasKey('active', $zone->fresh()->toArray());
        $this->assertIsBool($zone->fresh()->active);
    }

    /** @test */
    public function can_have_multiple_countries_associated()
    {
        $zone = Zone::factory()->create();

        $zone->countries()->attach(Country::limit(5)->get());

        $this->assertCount(5, $zone->countries);
    }

    /** @test */
    public function by_default_its_create_a_global_zone_where_all_countries_are_in_and_its_undeletable()
    {
        $default_zone = Zone::first();
        $this->assertNotEmpty($default_zone);
        $this->assertTrue($default_zone->undeletable);
        $this->assertCount(Country::all()->count(), $default_zone->countries);
    }




}
